name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        domain: [lemmyverse.link, threadiverse.link]
        include:
          - domain: lemmyverse.link
            zoneSecret: LEMMYVERSE_ZONE_ID
            domainId: Lemmyverse
          - domain: threadiverse.link
            zoneSecret: THREADIVERSE_ZONE_ID
            domainId: Threadiverse
    env:
      DOMAIN_NAME: ${{ matrix.domain }}
      DOMAIN_ZONE: ${{ secrets[matrix.zone] }}
      DOMAIN_ID: ${{ matrix.domainId }}
      AWS_REGION: eu-central-1
      APP_ENV: prod
      AWS_ACCESS_KEY_ID: ${{ secrests.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup prod dependencies
        run: yarn install
      - name: Build assets
        run: yarn build
      - name: Prepare cache
        run: ./bin/console cache:warmup --env=prod
      - name: Deploy infrastructure
        run: serverless deploy --stage prod --verbose --region $AWS_REGION
      - name: Deploy assets
        run: |
          export ASSETS_BUCKET=$(aws cloudformation describe-stacks --stack-name LemmyverseLink-$DOMAIN_ID-prod --query "Stacks[0].Outputs[?OutputKey=='AssetsBucket'].OutputValue" --output=text --region $AWS_REGION)
          aws s3 sync public/build s3://$ASSETS_BUCKET/build --delete
      - name: Clear CDN cache
        run: |
          export CDN_ID=$(aws cloudformation describe-stacks --stack-name LemmyverseLink-$DOMAIN_ID-prod --query "Stacks[0].Outputs[?OutputKey=='Cdn'].OutputValue" --output=text --region $AWS_REGION)
          aws cloudfront create-invalidation --distribution-id $CDN_ID --paths "/*"
